<!DOCTYPE html>
<html>
<head>
	<title>Minesweeper</title>
	<link rel="stylesheet" type="text/css" href="minesweeper.css">
</head>
<body>
	<h1>Minesweeper</h1>
	<div id="board"></div>
	<script src="minesweeper.js"></script>
</body>
</html>
```

CSS:

```
#board {
	display: grid;
	grid-template-columns: repeat(8, 40px);
	grid-template-rows: repeat(8, 40px);
	grid-gap: 5px;
}

.square {
	font-size: 20px;
	font-weight: bold;
	text-align: center;
	background-color: #eee;
	border: 1px solid #ccc;
	cursor: pointer;
}

.square.clicked {
	background-color: #ddd;
}

.square.bomb {
	background-color: #f00;
}

.square.flag {
	color: #00f;
}
```

JavaScript:

```
function createBoard(dim, numBombs) {
	let board = [];
	for (let i = 0; i < dim; i++) {
		board[i] = [];
		for (let j = 0; j < dim; j++) {
			board[i][j] = {
				bomb: false,
				count: 0,
				clicked: false,
				flag: false,
			};
		}
	}
	let bombs = 0;
	while (bombs < numBombs) {
		let row = Math.floor(Math.random() * dim);
		let col = Math.floor(Math.random() * dim);
		if (!board[row][col].bomb) {
			board[row][col].bomb = true;
			bombs++;
		}
	}
	for (let i = 0; i < dim; i++) {
		for (let j = 0; j < dim; j++) {
			if (!board[i][j].bomb) {
				let count = 0;
				for (let row = Math.max(i-1, 0); row <= Math.min(i+1, dim-1); row++) {
					for (let col = Math.max(j-1, 0); col <= Math.min(j+1, dim-1); col++) {
						if (board[row][col].bomb) {
							count++;
						}
					}
				}
				if (count > 0) {
					board[i][j].count = count;
				}
			}
		}
	}
	return board;
}

function createSquare(board, row, col) {
	let square = document.createElement("div");
	square.classList.add("square");
	if (board[row][col].clicked) {
		square.classList.add("clicked");
		if (board[row][col].count > 0) {
			square.textContent = board[row][col].count;
		}
		if (board[row][col].bomb) {
			square.classList.add("bomb");
			square.textContent = "X";
		}
	}
	if (board[row][col].flag) {
		square.classList.add("flag");
		square.textContent = "F";
	}
	square.addEventListener("click", function() {
		if (!board[row][col].flag) {
			board[row][col].clicked = true;
			if (board[row][col].bomb) {
				alert("Game over!");
				location.reload();
			} else if (board[row][col].count == 0) {
				for (let i = Math.max(row-1, 0); i <= Math.min(row+1, board.length-1); i++) {
					for (let j = Math.max(col-1, 0); j <= Math.min(col+1, board.length-1); j++) {
						createSquare(board, i, j);
					}
				}
			}
			createSquare(board, row, col);
		}
	});
	square.addEventListener("contextmenu", function(event) {
		event.preventDefault();
		if (!board[row][col].clicked) {
			board[row][col].flag = !board[row][col].flag;
			createSquare(board, row, col);
		}
	});
	return square;
}

function createGameBoard(board) {
	let gameBoard = document.getElementById("board");
	gameBoard.innerHTML = "";
	for (let i = 0; i < board.length; i++) {
		for (let j = 0; j < board[i].length; j++) {
			let square = createSquare(board, i, j);
			gameBoard.appendChild(square);
		}
	}
	gameBoard.style.display = "grid";
}

let board = createBoard(8, 10);
createGameBoard(board);
